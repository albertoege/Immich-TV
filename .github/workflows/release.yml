name: Create Release on Tag

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: google-services.json and extra strings file
        env:
          GOOGLE_SERVICES_BASE64: ${{secrets.GOOGLE_SERVICES_BASE64}}
          STRINGS_OTHER_BASE64: ${{secrets.STRINGS_OTHER}}
        run: |
          echo $GOOGLE_SERVICES_BASE64 | base64 --decode > ./app/google-services.json
          echo $STRINGS_OTHER_BASE64 | base64 --decode > ./app/src/main/res/values/strings_other.xml

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 --decode > release-keystore.jks

      - name: Build signed APK
        env:
          RELEASE_KEYSTORE_PATH: ${{ github.workspace }}/release-keystore.jks
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleRelease

      - name: Get commit messages since last release
        id: get_commits
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "No previous tag found. Getting all commits."
            git log --pretty=format:'%h %s' > commits.txt
          else
            echo "Previous tag: $LAST_TAG"
            git log "$LAST_TAG"..HEAD --pretty=format:'%h %s' > commits.txt
          fi

      - name: Set release notes
        id: set_release_notes
        run: |
          RELEASE_NOTES=$(cat commits.txt)
          RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
          RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
          echo "release_notes=$RELEASE_NOTES" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.set_release_notes.outputs.release_notes }}
          draft: false
          prerelease: false

      - name: Upload APK Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/outputs/apk/release/ImmichTV-${{ github.ref_name }}.apk
          asset_name: ImmichTV-${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive
